package com.CrudPark.app.util;

import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.nio.charset.StandardCharsets;

public class PrinterUtil {

    // üìç Ruta donde Ubuntu monta las impresoras t√©rmicas USB
    private static final String PRINTER_PATH = "/dev/usb/lp1";

    /**
     * Env√≠a un ticket en formato de texto a la impresora t√©rmica.
     * @param text Contenido del ticket generado
     */
    public static void printTicket(String text) {
        File printer = new File(PRINTER_PATH);

        // üîç Verificar si la impresora est√° conectada
        if (!printer.exists()) {
            System.out.println("‚ö†Ô∏è No se encontr√≥ la impresora en " + PRINTER_PATH);
            System.out.println("üí° Verifica conexi√≥n o permisos con: sudo chmod 666 " + PRINTER_PATH);
            return;
        }

        try (OutputStream out = new FileOutputStream(PRINTER_PATH)) {
            // üß© Comandos b√°sicos ESC/POS
            byte[] init = {0x1B, 0x40};           // Inicializa impresora
            byte[] center = {0x1B, 0x61, 0x01};   // Centra texto
            byte[] left = {0x1B, 0x61, 0x00};     // Alinea a la izquierda
            byte[] cut = {0x1D, 0x56, 0x00};      // Cortar papel

            // üñ®Ô∏è Inicializar y centrar
            out.write(init);
            out.write(center);

            // ‚úâÔ∏è Enviar texto del ticket
            out.write(text.getBytes(StandardCharsets.UTF_8));

            // üßæ Espacio antes del corte
            out.write("\n\n\n".getBytes(StandardCharsets.UTF_8));

            // üßæ Cortar papel
            out.write(left);
            out.write(cut);
            out.flush();

            System.out.println("üñ®Ô∏è Ticket enviado a la impresora con √©xito.");

        } catch (Exception e) {
            System.out.println("‚ö†Ô∏è Error al imprimir ticket: " + e.getMessage());
        }
    }
}
